name: Deploy to AKS
on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/azure-cli
    steps:
      - name: Checkout repository 
        uses: actions/checkout@v2

      - name: Login to Azure
        run: az login --service-principal -u ${{ secrets.ARM_CLIENT_ID }} -p ${{ secrets.ARM_CLIENT_SECRET }} --tenant ${{ secrets.ARM_TENANT_ID }}

      - name: Install kubectl
        run: |
         az aks install-cli

      - name: Log in to Azure Kubernetes Service
        run: |
          az aks get-credentials --resource-group ${{ secrets.resource_group }} --name ${{ secrets.cluster_name }}
      - name: Install kubelogin
        run: |
          curl -LO https://github.com/Azure/kubelogin/releases/download/v0.0.23/kubelogin-linux-amd64.zip
          unzip kubelogin-linux-amd64.zip -d /usr/local/bin
          chmod +x /usr/local/bin/bin/linux_amd64/kubelogin
          mv /usr/local/bin/bin/linux_amd64/kubelogin /usr/local/bin/
          kubelogin
      - name: Authenticate with AKS using kubelogin
        run: |
          kubelogin convert-kubeconfig -l azurecli
          
      - name: Azure AKS Set Context
        uses: azure/aks-set-context@v3
        with:
          resource-group: '${{ secrets.resource_group }}' 
          cluster-name: '${{ secrets.cluster_name }}'

      - name: Deploy to AKS
        id: deploy-aks
        uses: Azure/k8s-deploy@v4
        with:
          namespace: default
          manifests: |
            cluster-role-binding.yml
#           images: '${{ secrets.registry }}.azurecr.io/${{ secrets.repository }}/azure-vote-front:${{ github.sha }}'
#           pull-images: false
          
#       - name: Deploy to AKS
#         run: |
#           kubectl apply -f cluster-role-binding.yaml
